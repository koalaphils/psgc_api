# This is a basic workflow to help you get started with Actions

name: Build and Push to Registry

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  schedule:
    - cron: 0 6 * * 1,4

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-versions:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.short-sha.outputs.sha }}
      date: ${{ steps.date.outputs.date }}
    steps:
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-versions
    permissions:
      packages: write
    env:
      version: latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: PSGC Laravel API
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64/v8
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/cache/psgc-api:${{ env.version }}
          cache-to: type=registry,mode=max,ref=ghcr.io/${{ github.repository_owner }}/cache/psgc-api:${{ env.version }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/psgc-api:${{ needs.build-versions.outputs.date }}
            ${{ github.repository_owner }}/psgc-api:${{ needs.build-versions.outputs.date }}
            ghcr.io/${{ github.repository_owner }}/psgc-api:${{ needs.build-versions.outputs.sha }}
            ${{ github.repository_owner }}/psgc-api:${{ needs.build-versions.outputs.sha }}
            ghcr.io/${{ github.repository_owner }}/psgc-api:${{ env.version }}
            ${{ github.repository_owner }}/psgc-api:${{ env.version }}
